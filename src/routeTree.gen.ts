/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodoImport } from './routes/todo'
import { Route as PassGenerateImport } from './routes/pass-generate'
import { Route as ExpenseImport } from './routes/expense'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as NotesIndexImport } from './routes/notes/index'
import { Route as NotesIdImport } from './routes/notes/$id'

// Create/Update Routes

const TodoRoute = TodoImport.update({
  path: '/todo',
  getParentRoute: () => rootRoute,
} as any)

const PassGenerateRoute = PassGenerateImport.update({
  path: '/pass-generate',
  getParentRoute: () => rootRoute,
} as any)

const ExpenseRoute = ExpenseImport.update({
  path: '/expense',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NotesIndexRoute = NotesIndexImport.update({
  path: '/notes/',
  getParentRoute: () => rootRoute,
} as any)

const NotesIdRoute = NotesIdImport.update({
  path: '/notes/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/expense': {
      id: '/expense'
      path: '/expense'
      fullPath: '/expense'
      preLoaderRoute: typeof ExpenseImport
      parentRoute: typeof rootRoute
    }
    '/pass-generate': {
      id: '/pass-generate'
      path: '/pass-generate'
      fullPath: '/pass-generate'
      preLoaderRoute: typeof PassGenerateImport
      parentRoute: typeof rootRoute
    }
    '/todo': {
      id: '/todo'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoImport
      parentRoute: typeof rootRoute
    }
    '/notes/$id': {
      id: '/notes/$id'
      path: '/notes/$id'
      fullPath: '/notes/$id'
      preLoaderRoute: typeof NotesIdImport
      parentRoute: typeof rootRoute
    }
    '/notes/': {
      id: '/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  ContactRoute,
  DashboardRoute,
  ExpenseRoute,
  PassGenerateRoute,
  TodoRoute,
  NotesIdRoute,
  NotesIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/dashboard",
        "/expense",
        "/pass-generate",
        "/todo",
        "/notes/$id",
        "/notes/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/expense": {
      "filePath": "expense.tsx"
    },
    "/pass-generate": {
      "filePath": "pass-generate.tsx"
    },
    "/todo": {
      "filePath": "todo.tsx"
    },
    "/notes/$id": {
      "filePath": "notes/$id.tsx"
    },
    "/notes/": {
      "filePath": "notes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
